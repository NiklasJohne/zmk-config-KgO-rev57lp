/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE    0
#define FNAV    1
#define BT      2

/ {
    combos {
        compatible = "zmk,combos";
        
        combo_BOOT {
            timeout-ms = <50>;
            key-positions = <4 5 6 7>;
            bindings = <&bootloader>;
        };

        combo_BT {
            timeout-ms = <50>;
            key-positions = <49 56>;
            bindings = <&mo BT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
                &kp ESC      &kp N1     &kp N2    &kp N3    &kp N4     &kp N5                           &kp N6     &kp N7     &kp N8     &kp N9    &kp N0     &kp SQT
                &kp TAB      &kp Q      &kp W     &kp E     &kp R      &kp T                            &kp Z      &kp U      &kp I      &kp O     &kp P      &kp BSPC
                &kp LSHIFT   &kp A      &kp S     &kp D     &kp F      &kp G          &kp LGUI          &kp H      &kp J      &kp K      &kp L     &kp SEMI   &kp RET
                &kp LCTL     &kp Y      &kp X     &kp C     &kp V      &kp B                            &kp N      &kp M      &kp COMMA  &kp DOT   &kp SLASH  &kp RSHIFT
                                                  &kp LGUI  &kp LALT   &mo FNAV  &kp SPACE  &kp RET     &mo BT  &kp RALT   &mkp RGUI
            >;
        };

        fun_nav {
            bindings = <
                &kp TILDE    &kp F1     &kp F2   &kp F3     &kp F4    &kp F5                              &kp F6   &kp F7     &kp F8     &kp F9     &kp F10         &trans
                &kp GRAVE    &trans     &trans   &trans     &kp F4    &trans                              &trans   &trans     &kp UP     &trans     &kp PG_UP       &trans
                &trans       &trans     &trans   &trans     &kp F8    &trans          &trans              &trans   &kp LEFT   &kp DOWN   &kp RIGHT  &kp PG_DN       &trans
                &trans       &kp GT     &kp LT   &trans     &kp F12   &trans                              &trans   &trans     &trans     &trans     &kp PAUSE_BREAK &trans
                                                 &none      &trans    &trans  &kp C_VOL_DN  &kp C_VOL_UP  &trans     &kp C_MUTE &none
                >;
        };


        blutut {
            bindings = <
                &out OUT_TOG  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4           &none  &none  &none  &none  &none  &none
                &none         &none         &none         &none         &none         &none                  &none  &none  &none  &none  &none  &none
                &none         &none         &none         &none         &none         &none     &bt BT_CLR   &none  &none  &none  &none  &none  &none
                &none         &none         &none         &none         &none         &none                  &none  &none  &none  &none  &none  &none
                                                                        &none  &none  &none   &none  &none   &none  &none  &none
                >;
        };
    };
};
